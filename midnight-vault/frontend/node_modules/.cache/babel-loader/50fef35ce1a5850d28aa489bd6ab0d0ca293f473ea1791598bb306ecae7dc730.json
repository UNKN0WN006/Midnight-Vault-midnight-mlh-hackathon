{"ast":null,"code":"var _jsxFileName = \"/workspaces/Midnight-Vault-midnight-mlh-hackathon/midnight-vault/frontend/src/components/Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport MetadataTable from './MetadataTable';\nimport QRCode from 'react-qr-code';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const [cleaned, setCleaned] = useState(false);\n  const [downloadLink, setDownloadLink] = useState('');\n  const [proof, setProof] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setMetadata(null);\n    setCleaned(false);\n    setDownloadLink('');\n    setProof('');\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    const res = await axios.post('/api/upload', formData);\n    setMetadata(res.data.metadata);\n  };\n  const handleClean = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    const res = await axios.post('/api/clean', formData, {\n      responseType: 'blob'\n    });\n    const url = window.URL.createObjectURL(new Blob([res.data]));\n    setDownloadLink(url);\n    setCleaned(true);\n    // Get proof\n    const hashRes = await axios.post('/api/proof', formData);\n    setProof(hashRes.data.txId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 p-6 rounded shadow-md w-full max-w-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      className: \"mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      className: \"bg-blue-600 px-4 py-2 rounded mr-2\",\n      children: \"Show Metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), metadata && /*#__PURE__*/_jsxDEV(MetadataTable, {\n      metadata: metadata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 20\n    }, this), metadata && !cleaned && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClean,\n      className: \"bg-green-600 px-4 py-2 rounded mt-4\",\n      children: \"Clean File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), cleaned && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: downloadLink,\n        download: true,\n        className: \"text-blue-400 underline\",\n        children: \"Download Cleaned File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [\"Blockchain Proof Tx: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-mono\",\n          children: proof\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: /*#__PURE__*/_jsxDEV(QRCode, {\n          value: downloadLink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"gOeTLAbIEz4WtwgycQzk8LN0dAw=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","axios","MetadataTable","QRCode","jsxDEV","_jsxDEV","Upload","_s","file","setFile","metadata","setMetadata","cleaned","setCleaned","downloadLink","setDownloadLink","proof","setProof","handleFileChange","e","target","files","handleUpload","formData","FormData","append","res","post","data","handleClean","responseType","url","window","URL","createObjectURL","Blob","hashRes","txId","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","download","value","_c","$RefreshReg$"],"sources":["/workspaces/Midnight-Vault-midnight-mlh-hackathon/midnight-vault/frontend/src/components/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport MetadataTable from './MetadataTable';\nimport QRCode from 'react-qr-code';\n\nfunction Upload() {\n  const [file, setFile] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const [cleaned, setCleaned] = useState(false);\n  const [downloadLink, setDownloadLink] = useState('');\n  const [proof, setProof] = useState('');\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setMetadata(null);\n    setCleaned(false);\n    setDownloadLink('');\n    setProof('');\n  };\n\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    const res = await axios.post('/api/upload', formData);\n    setMetadata(res.data.metadata);\n  };\n\n  const handleClean = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    const res = await axios.post('/api/clean', formData, { responseType: 'blob' });\n    const url = window.URL.createObjectURL(new Blob([res.data]));\n    setDownloadLink(url);\n    setCleaned(true);\n    // Get proof\n    const hashRes = await axios.post('/api/proof', formData);\n    setProof(hashRes.data.txId);\n  };\n\n  return (\n    <div className=\"bg-gray-800 p-6 rounded shadow-md w-full max-w-lg\">\n      <input type=\"file\" onChange={handleFileChange} className=\"mb-4\" />\n      <button onClick={handleUpload} className=\"bg-blue-600 px-4 py-2 rounded mr-2\">Show Metadata</button>\n      {metadata && <MetadataTable metadata={metadata} />}\n      {metadata && !cleaned && (\n        <button onClick={handleClean} className=\"bg-green-600 px-4 py-2 rounded mt-4\">Clean File</button>\n      )}\n      {cleaned && (\n        <div className=\"mt-4\">\n          <a href={downloadLink} download className=\"text-blue-400 underline\">Download Cleaned File</a>\n          <div className=\"mt-2\">Blockchain Proof Tx: <span className=\"font-mono\">{proof}</span></div>\n          <div className=\"mt-2\"><QRCode value={downloadLink} /></div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Upload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}